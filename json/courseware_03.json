{
  "maxScore": 20,
  "lives": 10,
  "livesPictureURL": "./images/cosmonaft.gif",
  "gameOverPictureURL": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSZVhfeXVPblhxNzA",
  "successPictureURL": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSd3U0S09YUkkwanc",
  "failurePictureURL": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSMzNOUGc3QndEOGM",
  "levels": [
    {
      "type": "choice",
      "centralPicture": "./images/astronaut.gif",
      "question": "Что из перечисленного является логическим выражением",
      "rightChoicesNums": [ 1, 4, 5, 7 ],
      "balls": 1,
      "choiceVariants": [
        "x = 0",
        "x || y",
        "if (!x) return",
        "var z = x ? 0 : 1",
        "x == 1",
        "z &amp;&amp; t",
        "Math.min (x, y)",
        "x.length != 0"
      ],
      "choicePicture": {
        "url": "images/goalkeeper.gif",
        "width": "100px",
        "height": "100px"
      },
      "rightChoicePicture": {
        "url": "images/goalkeeper-3.gif",
        "width": "100px"
      },
      "wrongChoicePicture": {
        "url": "images/explosion.gif",
        "width": "100px"
      }
    },
    {
      "type": "input",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Создать элемент div и связанную с ним переменную x в модели",
      "inputLegend": {
        "before": "var x = document.",
        "after": "('div');"
      },
      "rightInput": "createElement",
      "balls": 3,
      "rightInputPicture": {
        "url": "images/smile-01.gif",
        "width": "80px"
      },
      "wrongInputPicture": {
        "url": "images/explosion.gif",
        "width": "80px"
      }
    },
    {
      "type": "findError",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Найти и исправить ошибки в коде конструктора",
      "wrongContent": [
          "var Figure = function () {",
          "    id: 'circle'",
          "    changeId: function ( newId ) {",
          "         this.id = newId",
          "    }",
          "}"
      ],
      "rightContent": [
          "var Figure = function () {",
          "    this.id = 'circle'",
          "    this.changeId = function ( newId ) {",
          "         this.id = newId",
          "    }",
          "}"
      ],
      "balls": 5,
      "rightInputPicture": {
        "url": "images/victory-1.gif",
        "width": "150px"
      },
      "wrongInputPicture": {
        "url": "images/simpson-and-ball.gif",
        "width": "150px"
      }
    },
    {
      "type": "choice",
      "centralPicture": "images/player.gif",
      "question": "Методы объекта String",
      "rightChoicesNums": [ 3, 4, 6, 7 ],
      "balls": 1,
      "choiceVariants": [
        "push()",
        "isNaN()",
        "shift()",
        "trim()",
        "charCodeAt()",
        "splice()",
        "indexOf()",
        "slice()"
      ],
      "choicePicture": {
        "url": "images/goalkeeper-2.gif",
        "width": "100px"
      },
      "rightChoicePicture": {
        "url": "images/smile-01.gif",
        "width": "50px"
      },
      "wrongChoicePicture": {
        "url": "images/emotion-06.png",
        "width": "50px"
      }
    },
    {
      "type": "input",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Создайте пустой массив",
      "inputLegend": {
        "before": "var arr = ",
        "after": ""
      },
      "rightInput": "[]",
      "balls": 1,
      "rightInputPicture": {
        "url": "images/smile-01.gif",
        "width": "80px"
      },
      "wrongInputPicture": {
        "url": "images/explosion.gif",
        "width": "100px"
      }
    },
    {
      "type": "findError",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Найти и исправить ошибки в литерале объекта",
      "wrongContent": [
          "var figure = {",
          "    this.id = 'circle'",
          "    this.changeId = function ( newId ) {",
          "         this.id = newId",
          "    }",
          "}"
      ],
      "rightContent": [
          "var figure = {",
          "    id: 'circle',",
          "    changeId: function ( newId ) {",
          "         this.id = newId",
          "    }",
          "}"
      ],
      "balls": 5,
      "rightInputPicture": {
        "url": "images/victory_transparent.gif",
        "width": "300px"
      },
      "wrongInputPicture": {
        "url": "images/simpson-and-ball.gif",
        "width": "150px"
      }
    },
    {
      "type": "choice",
      "centralPicture": "images/player.gif",
      "question": "var x = 0, y = 0<br> var z = x > y ? '***' : ( x === y ? [ 1, 2 ] : x / y )<br>Какой тип данных будет у переменной z ?",
      "rightChoicesNums": [ 5 ],
      "balls": 1,
      "choiceVariants": [
        "boolean",
        "string",
        "number",
        "undefined",
        "function",
        "object",
        "NaN",
        "Infinity"
      ],
      "choicePicture": {
        "url": "images/goalkeeper-2.gif",
        "width": "100px"
      },
      "rightChoicePicture": {
        "url": "images/smile-07.png",
        "width": "50px"
      },
      "wrongChoicePicture": {
        "url": "images/smile-06.png",
        "width": "50px"
      }
    },
    {
      "type": "input",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Найти в строке nature подстроку bio, и поместить индекс вхождения подстроки bio в переменную ind",
      "inputLegend": {
        "before": "var ind = nature.",
        "after": "= '( bio )';"
      },
      "rightInput": "indexOf",
      "balls": 3,
      "rightInputPicture": {
        "url": "images/victory_transparent.gif",
        "width": "300px"
      },
      "wrongInputPicture": {
        "url": "images/explosion.gif",
        "width": "100px"
      }
    },
    {
      "type": "input",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Дополнить контент html-элемента main текстом 'Это я добавил'",
      "inputLegend": {
        "before": "var elem = document.createElement ( 'p' )<br>document.body.appendChild ( elem )<br>elem.",
        "after": " += 'Это я добавил';"
      },
      "rightInput": "innerHTML",
      "balls": 3,
      "rightInputPicture": {
        "url": "images/smile-07.png",
        "width": "50px"
      },
      "wrongInputPicture": {
        "url": "images/smile-06.png",
        "width": "50px"
      }
    },
    {
      "type": "choice",
      "centralPicture": "images/player.gif",
      "question": "Что из перечисленного является методами объекта Array",
      "rightChoicesNums": [ 4, 5, 7 ],
      "balls": 1,
      "choiceVariants": [
        "substr()",
        "getTime()",
        "split()",
        "trim()",
        "unshift()",
        "slice()",
        "indexOf()",
        "join()"
      ],
      "choicePicture": {
        "url": "images/goalkeeper-2.gif",
        "width": "100px"
      },
      "rightChoicePicture": {
        "url": "images/emotion-12.png",
        "width": "50px"
      },
      "wrongChoicePicture": {
        "url": "images/emotion-06.png",
        "width": "50px"
      }
    },
    {
      "type": "choice",
      "centralPicture": "images/player.gif",
      "question": "Какое выражение вернет NaN",
      "rightChoicesNums": [ 0, 1, 4, 5, 6, 7 ],
      "balls": 1,
      "choiceVariants": [
        "0/0",
        "Number.NaN",
        "parseInt('10px')",
        "Number.isNaN('x10')",
        "parseFloat('x10')",
        "Math.exp('*')",
        "Math.min(10,'***')",
        "Math.round('a'/'b')"
      ],
      "choicePicture": {
        "url": "images/goalkeeper-2.gif",
        "width": "100px"
      },
      "rightChoicePicture": {
        "url": "images/emotion-12.png",
        "width": "50px"
      },
      "wrongChoicePicture": {
        "url": "images/emotion-06.png",
        "width": "50px"
      }
    },
    {
      "type": "findError",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Замените '?' так, чтобы в результате выполнения кода у Маши появилась новая подруга вместо Светы",
      "wrongContent": [
          "var girl = {",
          "    name: 'Маша',",
          "    friends: [ 'Лена', 'Света', 'Оля' ]",
          "}",
          "girl.friends.??? ( ?, ?, 'Марина' )"
      ],
      "rightContent": [
          "var girl = {",
          "    name: 'Маша',",
          "    friends: [ 'Лена', 'Света', 'Оля' ]",
          "}",
          "girl.friends.splice ( 1, 1, 'Марина' )"
      ],
      "balls": 8,
      "rightInputPicture": {
        "url": "images/emotion-12.png",
        "width": "50px"
      },
      "wrongInputPicture": {
        "url": "images/simpson-and-ball.gif",
        "width": "150px"
      }
    },
    {
      "type": "choice",
      "centralPicture": "images/player.gif",
      "question": "В каком случае результат будет иметь тип 'number'",
      "rightChoicesNums": [ 0, 1, 2, 3, 4, 6 ],
      "balls": 1,
      "choiceVariants": [
        "false + 5",
        "4 + NaN",
        "9 + ( '' == false )",
        "Infinity + undefined",
        "Infinity + null",
        "null + '5'",
        "4 + isNaN ( 5 )",
        "null"
      ],
      "choicePicture": {
        "url": "images/goalkeeper.gif",
        "width": "100px"
      },
      "rightChoicePicture": {
        "url": "images/smile-07.png",
        "width": "50px"
      },
      "wrongChoicePicture": {
        "url": "images/smile-06.png",
        "width": "50px"
      }
    },
    {
      "type": "findError",
      "centralPicture": "https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSbGdmVWxJX3JOYlE",
      "question": "Дополнить код, подставив вместо ??? правильные выражения. Результатом должна быть строка a*b*c*d*e*f",
      "wrongContent": [ "var x = 'abcdef'.??? ('').??? ( '*' )" ],
      "rightContent": [ "var x = 'abcdef'.split ('').join ( '*' )" ],
      "balls": 8,
      "rightInputPicture": {
        "url": "images/emotion-12.png",
        "width": "50px"
      },
      "wrongInputPicture": {
        "url": "images/simpson-and-ball.gif",
        "width": "150px"
      }
    },
    {
      "type": "findError",
      "centralPicture": "images/personage-01.gif",
      "question": "Подправьте конструктор, подставив вместо ??? правильные выражения. Нужно создать прототипный метод startMission, затем создать экземпляр idiot и вызывать унаследованный им метод startMission",
      "wrongContent": [
          "var Hero = function ( params ) {",
          "     this.name = ???.name || 'Hero'",
          "}",
          "Hero.???.startMission = function ( mission ) {",
          "     alert ( 'Я - ' + ???.name + ', выполняю миссию: ' + mission )",
          "}",
          "var idiot = new ??? ( { name: 'Идиот' } )",
          "idiot.startMission ( 'Спасение пингвинов' )"
      ],
      "rightContent": [
          "var Hero = function ( params ) {",
          "     this.name = params.name || 'Hero'",
          "}",
          "Hero.prototype.startMission = function ( mission ) {",
          "     alert ( 'Я - ' + this.name + ', выполняю миссию: ' + mission )",
          "}",
          "var idiot = new Hero ( { name: 'Идиот' } )",
          "idiot.startMission ( 'Спасение пингвинов' )"
      ],
      "balls": 10,
      "rightInputPicture": {
        "url": "images/alien-2.gif",
        "width": "50px"
      },
      "wrongInputPicture": {
        "url": "images/punish.gif",
        "width": "150px"
      }
    }
  ]
}
